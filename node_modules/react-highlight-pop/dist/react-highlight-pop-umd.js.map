{"version":3,"file":"react-highlight-pop-umd.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/lib/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component, createRef } from 'react';\nimport './style.css';\n\nclass HighlightPop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPopover: false,\n      x: 0,\n      y: 0,\n      selectedText: ''\n    };\n\n    this.highlight = createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  hidePopover = () => {\n    this.setState({ showPopover: false });\n  };\n\n  onMouseUp = () => {\n    const selection = window.getSelection();\n    const selectedText = selection.toString().trim();\n\n    if (!selectedText) {\n      this.hidePopover();\n      return;\n    }\n\n\t\tconst selectionRange = selection.getRangeAt(0);\n\n    const startNode = selectionRange.startContainer.parentNode;\n    const endNode = selectionRange.endContainer.parentNode;\n\n    const highlightable = this.highlight.current;\n    const highlightableRegion = highlightable.querySelector('.h-popable');\n\n    if (highlightableRegion) {\n      if (\n        !highlightableRegion.contains(startNode) ||\n        !highlightableRegion.contains(endNode)\n      ) {\n        this.hidePopover();\n        return;\n      }\n    } else if (\n      !highlightable.contains(startNode) ||\n      !highlightable.contains(endNode)\n    ) {\n      this.hidePopover();\n      return;\n    }\n\n    if (!startNode.isSameNode(endNode)) {\n      this.hidePopover();\n      return;\n    }\n\n    const { x, y, width } = selectionRange.getBoundingClientRect();\n    if (!width) {\n      this.hidePopover();\n      return;\n    }\n\n    this.setState({\n      x: x + width / 2,\n      y: y + window.scrollY - 10,\n      selectedText,\n      showPopover: true\n    });\n\n\t\tconst { onHighlightPop = () => {} } = this.props;\n\t\tonHighlightPop(selectedText);\n\t};\n\n  render() {\n    const { showPopover, x, y } = this.state;\n    const { children, popoverItems } = this.props;\n    const itemClass = 'h-popover-item';\n    return (\n      <div ref={this.highlight}>\n        {showPopover && (\n          <div\n            className=\"h-popover\"\n            style={{ left: `${x}px`, top: `${y}px` }}\n            role=\"presentation\"\n            onMouseDown={e => e.preventDefault()}\n          >\n            {popoverItems ? (\n              popoverItems(itemClass)\n            ) : (\n              <span role=\"button\" className={itemClass}>\n                Add yours\n              </span>\n            )}\n          </div>\n        )}\n        {children}\n      </div>\n    );\n  }\n}\n\nHighlightPop.defaultProps = {\n  onHighlightComment: null,\n  onExitHighlight: null,\n\tpopoverItems: null,\n\tchildren: null\n};\n\nexport default HighlightPop;\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","HighlightPop","props","setState","showPopover","selection","window","getSelection","selectedText","toString","trim","selectionRange","getRangeAt","startNode","startContainer","parentNode","endNode","endContainer","highlightable","_this","highlight","current","highlightableRegion","querySelector","contains","hidePopover","isSameNode","getBoundingClientRect","x","y","width","scrollY","onHighlightPop","state","createRef","Component","addEventListener","this","onMouseUp","removeEventListener","children","popoverItems","React","className","left","top","role","onMouseDown","e","preventDefault","defaultProps","onHighlightComment","onExitHighlight"],"mappings":"q4BAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,6qBCpBxCe,yBACQC,iJACJA,iFAmBM,aACPC,SAAS,CAAEC,aAAa,4BAGnB,eACJC,EAAYC,OAAOC,eACnBC,EAAeH,EAAUI,WAAWC,UAErCF,OAKDG,EAAiBN,EAAUO,WAAW,GAEpCC,EAAYF,EAAeG,eAAeC,WAC1CC,EAAUL,EAAeM,aAAaF,WAEtCG,EAAgBC,EAAKC,UAAUC,QAC/BC,EAAsBJ,EAAcK,cAAc,iBAEpDD,OAECA,EAAoBE,SAASX,KAC7BS,EAAoBE,SAASR,iBAEzBS,mBAGF,IACJP,EAAcM,SAASX,KACvBK,EAAcM,SAASR,iBAEnBS,iBAIFZ,EAAUa,WAAWV,UAKFL,EAAegB,wBAA/BC,IAAAA,EAAGC,IAAAA,EAAGC,IAAAA,SACTA,KAKA3B,SAAS,CACZyB,EAAGA,EAAIE,EAAQ,EACfD,EAAGA,EAAIvB,OAAOyB,QAAU,GACxBvB,aAAAA,EACAJ,aAAa,UAGqBe,EAAKjB,MAAnC8B,2BAAiB,gBACVxB,UAZNiB,qBANAA,qBA7BAA,kBA3BFQ,MAAQ,CACX7B,aAAa,EACbwB,EAAG,EACHC,EAAG,EACHrB,aAAc,MAGXY,UAAYc,sQAVMC,+DAcvB7B,OAAO8B,iBAAiB,UAAWC,KAAKC,0DAIxChC,OAAOiC,oBAAoB,UAAWF,KAAKC,kDA+DbD,KAAKJ,MAA3B7B,IAAAA,YAAawB,IAAAA,EAAGC,IAAAA,IACWQ,KAAKnC,MAAhCsC,IAAAA,SAAUC,IAAAA,oBAGhBC,uBAAKvD,IAAKkD,KAAKjB,WACZhB,GACCsC,uBACEC,UAAU,YACVnD,MAAO,CAAEoD,eAAShB,QAAOiB,cAAQhB,SACjCiB,KAAK,eACLC,YAAa,SAAAC,UAAKA,EAAEC,mBAEnBR,EACCA,EAXQ,kBAaRC,wBAAMI,KAAK,SAASH,UAbZ,gCAmBbH,+CAMTvC,EAAaiD,aAAe,CAC1BC,mBAAoB,KACpBC,gBAAiB,KAClBX,aAAc,KACdD,SAAU"}